name: Tests

on:
  push:
    branches: 
      - master
  pull_request:
    branches:
      - "*"

jobs:
  Formatting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Formatting
        uses: github/super-linter@v3
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: master
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_SNAKEMAKE_SNAKEFMT: true


  Linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Lint workflow
        uses: snakemake/snakemake-github-action@v1.15.0
        with:
          directory: .
          snakefile: workflow/Snakefile
          stagein: mamba install -n snakemake -c conda-forge peppy
          args: "--lint"


  Testing:
    runs-on: ubuntu-latest
    needs:
      - Formatting
      - Linting
    steps:
      - uses: actions/checkout@v2

      - name: Cache data
        uses: actions/cache@v2
        with:
          path: |
            .tests/data
            .tests/resources/genomes
          key: "testdata" # TODO update key once we cache more than the data

      - name: Download test data
        run: |
          mkdir -p .tests/data
          curl -L ftp://ftp.sra.ebi.ac.uk/vol1/fastq/ERR486/002/ERR4861412/ERR4861412_1.fastq.gz > .tests/data/ERR4861412_1.fastq.gz
          curl -L ftp://ftp.sra.ebi.ac.uk/vol1/fastq/ERR486/002/ERR4861412/ERR4861412_2.fastq.gz > .tests/data/ERR4861412_2.fastq.gz
      
      - name: Use smaller reference files for testing
        run: |
          mkdir -p .tests/resources/minikraken-8GB
          curl -SL https://github.com/thomasbtf/small-kraken-db/raw/master/human_k2db.tar.gz | tar zxvf - -C .tests/resources/minikraken-8GB --strip 1
          mkdir -p .tests/resources/genomes
          curl -SL "https://www.ncbi.nlm.nih.gov/sviewer/viewer.fcgi?id=NC_000021.9&db=nuccore&report=fasta" | gzip -c > .tests/resources/genomes/human-genome.fna.gz

      - name: Test workflow
        uses: snakemake/snakemake-github-action@v1.15.0
        with:
          directory: .tests
          snakefile: workflow/Snakefile
          stagein: mamba install -n snakemake -c conda-forge mamba peppy -y
          args: "--use-conda --show-failed-logs --cores 2 --resources ncbi_api_requests=1 --conda-cleanup-pkgs cache --conda-frontend mamba"

      - name: Test report
        uses: snakemake/snakemake-github-action@v1.15.0
        with:
          directory: .tests
          snakefile: workflow/Snakefile
          stagein: mamba install -n snakemake -c conda-forge peppy
          args: "--report report.zip"

      
      - name: Test workflow (singularity)
        uses: snakemake/snakemake-github-action@v1.15.0
        with:
          directory: .tests
          snakefile: workflow/Snakefile
          stagein: mamba install -n snakemake -c conda-forge peppy
          args: "--use-conda --use-singularity --show-failed-logs --cores 2 --resources ncbi_api_requests=1 --conda-cleanup-pkgs cache --conda-frontend mamba"


  Benchmark-Strain-Calling:
    runs-on: ubuntu-latest
    needs: Testing
    steps:
      - uses: actions/checkout@v2

      - name: Cache data
        uses: actions/cache@v2
        with:
          path: |
            .tests/data
            .tests/resources/genomes
          key: "testdata-benchmarking" # TODO update key once we cache more than the data
      
      - name: Test workflow
        uses: snakemake/snakemake-github-action@v1.15.0
        with:
          directory: .tests
          snakefile: workflow/Snakefile
          stagein: mamba install -n snakemake -c conda-forge peppy
          args: "benchmark_strain_calling --use-conda --show-failed-logs --cores 2 --resources ncbi_api_requests=1 --conda-cleanup-pkgs cache --conda-frontend mamba"
      
      - name: Check strain calling
        run: |
          cat .tests/results/benchmarking/strain-calling.csv
          if (tail -n+2 .tests/results/benchmarking/strain-calling.csv | grep mismatch > /dev/null)
          then
            echo "Strain calling failed in some cases (see above)."
            exit 1
          else
            echo "Strain calling was successful in all cases."
          fi


  Benchmark-Assembly:
    runs-on: ubuntu-latest
    needs: Testing
    steps:
      - uses: actions/checkout@v2

      - name: Cache data
        uses: actions/cache@v2
        with:
          path: |
            .tests/data
            .tests/resources/genomes
          key: "testdata-benchmarking" # TODO update key once we cache more than the data
      
      - name: Test workflow
        uses: snakemake/snakemake-github-action@v1.15.0
        with:
          directory: .tests
          snakefile: workflow/Snakefile
          stagein: mamba install -n snakemake -c conda-forge peppy
          args: "benchmark_assembly --use-conda --show-failed-logs --cores 2 --resources ncbi_api_requests=1 --conda-cleanup-pkgs cache --conda-frontend mamba"

      - name: Check assembly
        run: |
          cat .tests/results/benchmarking/assembly.csv
          if [[ $(tail -1 .tests/results/benchmarking/assembly.csv) < 0.8 ]]
          then
            echo "Assembly bechmarking failed. There is at least one assembly where the contigs do not cover 80% of the original sequence (see above)."
            exit 1
          else
            echo "Assembly was successful."
          fi
